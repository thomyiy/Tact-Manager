<%- contentFor('HeaderCss') %>
<%- include("partials/title-meta", {"title": "Accueil"}) %>

<!-- nouisliderribute css -->
<link rel="stylesheet" href="/assets/libs/nouislider/nouislider.min.css">

<!-- color picker css -->
<link rel="stylesheet" href="/assets/libs/@simonwep/pickr/themes/classic.min.css"/> <!-- 'classic' theme -->
<link rel="stylesheet" href="/assets/libs/@simonwep/pickr/themes/monolith.min.css"/> <!-- 'monolith' theme -->
<link rel="stylesheet" href="/assets/libs/@simonwep/pickr/themes/nano.min.css"/> <!-- 'nano' theme -->
<link rel="stylesheet" href="/assets/libs/gridjs/theme/mermaid.min.css">

<!-- datepicker css -->
<link rel="stylesheet" href="/assets/libs/flatpickr/flatpickr.min.css">
<%- contentFor('breadcrumb') %>

<!-- start page title -->
<div class="row">
    <div class="col-12">
        <div class="page-title-box d-flex align-items-center justify-content-between">
            <h4 class="mb-0">Cheerleading Score : <%= sessionSchool.name %></h4>

            <div class="page-title-right">
                <ol class="breadcrumb m-0">
                    <li class="breadcrumb-item"><a href="javascript: void(0);">Ecommerce</a></li>
                    <li class="breadcrumb-item active">Cheerleading Score : <%= sessionSchool.name %></li>
                </ol>
            </div>

        </div>
    </div>
</div>
<!-- end page title -->

<%- contentFor('body') %>

<div class="row">
    <div class="col-xl-12 col-lg-12">
        <div class="card">
            <div class="card-body">
                <div>
                    <div class="row">
                        <div class="col-md-6">
                            <div>
                                <h5>Cheerleading Score : <%= sessionSchool.name %></h5>
                            </div>
                        </div>
                    </div>
                    <!-- end row -->

                    <div class="col-lg-12">
                        <div class="card">
                            <div class="card-header">
                            </div><!-- end card header -->
                            <div class="card-body">
                                <h5>Stunt</h5>
                                <div id="table-stunt"></div>
                                <h5>Chorégraphie</h5>
                                <div id="table-choreography"></div>
                                <h5>Tumbling</h5>
                                <div id="table-tumbling"></div>
                                <h5>Sauts</h5>
                                <div id="table-jump"></div>
                                <h5>Interraction</h5>
                                <div id="table-interraction"></div>
                                <h5>Fair Play</h5>
                                <div id="table-fairplay"></div>


                                <h5>Arbitre</h5>
                                <div id="table-arbitrator"></div>

                                <button type="button" class="btn btn-primary waves-effect waves-light"
                                        data-bs-toggle="modal" data-bs-target="#myModal">Ajouter un arbitre
                                </button>

                                <!-- sample modal content -->
                                <div id="myModal" class="modal fade" tabindex="-1" aria-labelledby="myModalLabel"
                                     aria-hidden="true" data-bs-scroll="true">
                                    <div class="modal-dialog">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <h5 class="modal-title" id="myModalLabel">Ajouter un arbitre</h5>
                                                <button type="button" class="btn-close" data-bs-dismiss="modal"
                                                        aria-label="Close"></button>
                                            </div>
                                            <div class="modal-body">
                                                <form action="/cheerleading/affectarbitrator" method="post"
                                                      class="needs-validation" novalidate>
                                                    <div class="mb-3 row">
                                                        <label class="col-md-2 col-form-label">Arbitre</label>
                                                        <div class="col-md-10">
                                                            <select class="form-select" name="arbitratorId">
                                                                <% for(var i = 0; i < arbitrators.length; i++) { %>
                                                                    <option value="<%= arbitrators[i]._id %>"><%= arbitrators[i].firstname %> <%= arbitrators[i].lastname %>
                                                                        >
                                                                    </option>
                                                                <% } %>
                                                            </select>
                                                            <input type="hidden" id="schoolId" name="schoolId"
                                                                   value="<%= sessionSchool._id %>"/>
                                                        </div>
                                                    </div>
                                                    <button class="btn btn-primary" type="submit">Valider</button>
                                                </form>
                                            </div><!-- /.modal-content -->
                                        </div><!-- /.modal-dialog -->
                                    </div><!-- /.modal -->
                                </div>
                            </div>
                            <!-- end card body -->
                        </div>
                        <!-- end card -->
                    </div>
                    <!-- end col -->
                </div>
                <!-- end row -->
            </div>
        </div>
    </div>
</div>

</div>

<%- contentFor('FooterJs') %>

<!-- gridjs js -->
<script src="/assets/libs/gridjs/gridjs.umd.js"></script>


<script src="/assets/libs/choices.js/public/assets/scripts/choices.min.js"></script>

<!-- color picker js -->
<script src="/assets/libs/@simonwep/pickr/pickr.min.js"></script>
<script src="/assets/libs/@simonwep/pickr/pickr.es5.min.js"></script>

<!-- datepicker js -->
<script src="/assets/libs/flatpickr/flatpickr.min.js"></script>
<script src="/assets/js/pages/form-validation.init.js"></script>
<script>

</script>

<script>
    var columns = ["Critère", "Note 1-80"];
    var data = <%- JSON.stringify(cheerleadingScore) %>;
    var grid = new gridjs.Grid({
        columns: ["Critère", "Note 1-65"],
        data: () => {
            return [["Difficulté", data.stuntDifficulty],
                ["Exécution", data.stuntExecution],
                ["Synchronisation", data.stuntSynchronization],
                ["Sécurité", data.stuntSecurity]]
        },
    }).render(document.getElementById("table-stunt"));
    var grid = new gridjs.Grid({
        columns: ["Critère", "Note 1-65"],
        data: () => {
            return [["Synchronisation", data.choreographySynchronization],
                ["Rythme avec la musique", data.choreographyRythme],
                ["Fluidité", data.choreographyFluidity]]
        },
    }).render(document.getElementById("table-choreography"));
    new gridjs.Grid({
        columns: ["Critère", "Note 1-20"],
        data: () => {
            return [["Difficulté", data.tumblingDifficulty],
                ["Exécution", data.tumblingExecution],
                ["Sécurité", data.tumblingSecurity]]
        },
    }).render(document.getElementById("table-tumbling"));
    new gridjs.Grid({
        columns: ["Critère", "Note 1-20"],
        data: () => {
            return [["Difficulté", data.jumpDifficulty],
                ["Exécution", data.jumpExecution],
                ["Synchronisation", data.jumpSynchronization]]
        },
    }).render(document.getElementById("table-jump"));
    new gridjs.Grid({
        columns: ["Critère", "Note 1-15"],
        data: () => {
            return [["Créativité", data.interractionCreativity],
                ["Réaction des supporters", data.interractionReaction]]
        },
    }).render(document.getElementById("table-interraction"));
    new gridjs.Grid({
        columns: ["Critère", "Note 1-15"],
        data: () => {
            return [["Attitude positive", data.fairplayAttitude],
                ["respect des adversaires/jury/règles", data.fairplayrespect]]
        },
    }).render(document.getElementById("table-fairplay"));

    function removeArbitrator(id) {
        console.log("removeArbitrator : " + id)
        fetch("/cheerleading/removearbitrator", {
            method: "POST",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({schoolId:"<%= sessionSchool._id %>",arbitratorId:id})
        })
            .then((response) => {
                console.log(response.status)
                if (response.status===200)
                    window.location.replace("/cheerleading/"+"<%= sessionSchool.name %>");
            });
    }

    new gridjs.Grid({
        columns: ["Nom", "Prenom", "Action"],
        data: () => {
            var data = <%- JSON.stringify(affectedArbitrators) %>;
            return data.map((e) => [e.firstname, e.lastname, gridjs.html(`<button class="btn btn-light btn-sm dropdown-toggle" type="button" onclick="removeArbitrator('${e._id}')" aria-expanded="false"><i class="fas fa-backspace"></i></button>`)]);
        },
    }).render(document.getElementById("table-arbitrator"));
</script>

<script src="/assets/js/pages/fontawesome.init.js"></script>
