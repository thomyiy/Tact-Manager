<%- contentFor('HeaderCss') %>
<%- include("../partials/title-meta", {"title": "Accueil"}) %>

<!-- nouisliderribute css -->
<link rel="stylesheet" href="/assets/libs/nouislider/nouislider.min.css">

<!-- color picker css -->
<link rel="stylesheet" href="/assets/libs/@simonwep/pickr/themes/classic.min.css"/> <!-- 'classic' theme -->
<link rel="stylesheet" href="/assets/libs/@simonwep/pickr/themes/monolith.min.css"/> <!-- 'monolith' theme -->
<link rel="stylesheet" href="/assets/libs/@simonwep/pickr/themes/nano.min.css"/> <!-- 'nano' theme -->
<link rel="stylesheet" href="/assets/libs/gridjs/theme/mermaid.min.css">

<!-- datepicker css -->
<link rel="stylesheet" href="/assets/libs/flatpickr/flatpickr.min.css">
<%- contentFor('breadcrumb') %>

<!-- start page title -->
<div class="row">
    <div class="col-12">
        <div class="page-title-box d-flex align-items-center justify-content-between">
            <h4 class="mb-0">Mario Kart</h4>

            <div class="page-title-right">
                <ol class="breadcrumb m-0">
                    <li class="breadcrumb-item"><a href="javascript: void(0);">Mario Kart</a></li>
                    <li class="breadcrumb-item active">Mario Kart</li>
                </ol>
            </div>

        </div>
    </div>
</div>
<!-- end page title -->

<%- contentFor('body') %>

<div class="row">
    <div class="col-xl-12 col-lg-12">
        <div class="card">
            <div class="card-body">
                <div>
                    <div class="row">
                        <div class="col-md-6">
                            <div>
                                <h5>Mario Kart</h5>
                            </div>
                        </div>
                    </div>
                    <!-- end row -->
                    <div class="col-lg-12">
                        <div class="card">
                            <div class="card-header">
                            </div><!-- end card header -->
                            <div class="card-body">
                                <div id="table-pagination"></div>
                            </div>
                            <!-- end card body -->
                        </div>
                        <!-- end card -->
                    </div>
                    <!-- end col -->
                </div>
                <!-- end row -->
            </div>
        </div>
    </div>
</div>

</div>

<%- contentFor('FooterJs') %>


<!-- gridjs js -->
<script src="/assets/libs/gridjs/gridjs.umd.js"></script>


<script src="/assets/libs/choices.js/public/assets/scripts/choices.min.js"></script>

<!-- color picker js -->
<script src="/assets/libs/@simonwep/pickr/pickr.min.js"></script>
<script src="/assets/libs/@simonwep/pickr/pickr.es5.min.js"></script>

<!-- datepicker js -->
<script src="/assets/libs/flatpickr/flatpickr.min.js"></script>
<script src="/assets/js/pages/form-validation.init.js"></script>
<script>
    var data = <%- JSON.stringify(schools) %>;

    function onInputChange(input, key) {

        var formdata = {
            _id: key,
            mkPosition: input.value
        }
        fetch("/esport/mk/update/", {
            method: "POST",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formdata)
        })
            .then((response) => {
                console.log(response.status)
            });
    }

    function buildInput(key, value) {
        return gridjs.html(`<input type="number" oninput="onInputChange(this,'${key}')" id="name" name="name" value="${value}" min="1" max="80" />`)
    }
    const parser = new DOMParser();

    var grid = new gridjs.Grid({
        columns: ["Nom",
            {
                name: "Position",
                sort: {
                    compare: (a, b) => {
                        var aValue = parser.parseFromString(a.props.content, "text/html").querySelector("input").value
                        var bValue = parser.parseFromString(b.props.content, "text/html").querySelector("input").value

                        if (aValue > bValue) {
                            return -1;
                        } else if (bValue > aValue) {
                            return 1;
                        } else {
                            return 0;
                        }
                    }
                }
            }],
        data: async () => {
            return data.map((e) => [e.name, buildInput(e._id, e.mkPosition)]);
        },
    }).render(document.getElementById("table-pagination"));
</script>

